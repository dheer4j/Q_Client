{"ast":null,"code":"var _jsxFileName = \"/Users/siddu/IdeaProjects/Q_client/quantum_email_client/frontend/src/hooks/useAuth.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useState, useEffect, useCallback, createContext, useContext } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Create context with default values\nconst AuthContext = /*#__PURE__*/createContext({\n  user: null,\n  isAuthenticated: false,\n  isLoading: false,\n  error: null,\n  login: async () => {\n    throw new Error('Login not implemented');\n  },\n  register: async () => {\n    throw new Error('Register not implemented');\n  },\n  logout: () => {\n    throw new Error('Logout not implemented');\n  }\n});\n\n// Provider component\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n\n  // Check if user is already logged in\n  useEffect(() => {\n    const checkAuthStatus = async () => {\n      try {\n        const token = localStorage.getItem('authToken');\n        if (token) {\n          const storedUserData = localStorage.getItem('userData');\n          if (storedUserData) {\n            const userData = JSON.parse(storedUserData);\n            if (userData && userData.id) {\n              setUser(userData);\n            } else {\n              clearAuthData();\n            }\n          } else {\n            clearAuthData();\n          }\n        }\n      } catch (err) {\n        console.error('Auth check failed:', err);\n        clearAuthData();\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    checkAuthStatus();\n  }, []);\n\n  // Helper function to clear authentication data\n  const clearAuthData = () => {\n    localStorage.removeItem('authToken');\n    localStorage.removeItem('userData');\n    setUser(null);\n  };\n  const login = useCallback(async (email, password) => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      // Simulate API delay\n      await new Promise(resolve => setTimeout(resolve, 1000));\n\n      // Simulate successful login\n      const userData = {\n        id: '1',\n        username: email.split('@')[0],\n        email\n      };\n\n      // Save auth data to localStorage\n      localStorage.setItem('authToken', 'demo-token');\n      localStorage.setItem('userData', JSON.stringify(userData));\n      setUser(userData);\n      navigate('/');\n    } catch (err) {\n      const errorMessage = err instanceof Error ? err.message : 'Login failed';\n      setError(errorMessage);\n      throw err;\n    } finally {\n      setIsLoading(false);\n    }\n  }, [navigate]);\n  const register = useCallback(async (username, email, password) => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      // Simulate API delay\n      await new Promise(resolve => setTimeout(resolve, 1000));\n\n      // Simulate successful registration\n      const userData = {\n        id: '1',\n        username,\n        email\n      };\n\n      // Save auth data to localStorage\n      localStorage.setItem('authToken', 'demo-token');\n      localStorage.setItem('userData', JSON.stringify(userData));\n      setUser(userData);\n      navigate('/');\n    } catch (err) {\n      const errorMessage = err instanceof Error ? err.message : 'Registration failed';\n      setError(errorMessage);\n      throw err;\n    } finally {\n      setIsLoading(false);\n    }\n  }, [navigate]);\n  const logout = useCallback(() => {\n    // Remove auth data from localStorage\n    clearAuthData();\n\n    // Redirect to login page\n    navigate('/login');\n  }, [navigate]);\n  const value = {\n    user,\n    isAuthenticated: !!user,\n    isLoading,\n    error,\n    login,\n    register,\n    logout\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 10\n  }, this);\n};\n\n// Custom hook to use the auth context\n_s(AuthProvider, \"WepFJFCEs5XUguspxopMREzv+4I=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport default useAuth;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["useState","useEffect","useCallback","createContext","useContext","useNavigate","jsxDEV","_jsxDEV","AuthContext","user","isAuthenticated","isLoading","error","login","Error","register","logout","AuthProvider","children","_s","setUser","setIsLoading","setError","navigate","checkAuthStatus","token","localStorage","getItem","storedUserData","userData","JSON","parse","id","clearAuthData","err","console","removeItem","email","password","Promise","resolve","setTimeout","username","split","setItem","stringify","errorMessage","message","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","$RefreshReg$"],"sources":["/Users/siddu/IdeaProjects/Q_client/quantum_email_client/frontend/src/hooks/useAuth.tsx"],"sourcesContent":["import { useState, useEffect, useCallback, createContext, useContext } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\ninterface User {\n  id: string;\n  username: string;\n  email: string;\n}\n\ninterface AuthContextType {\n  user: User | null;\n  isAuthenticated: boolean;\n  isLoading: boolean;\n  error: string | null;\n  login: (email: string, password: string) => Promise<void>;\n  register: (username: string, email: string, password: string) => Promise<void>;\n  logout: () => void;\n}\n\n// Create context with default values\nconst AuthContext = createContext<AuthContextType>({\n  user: null,\n  isAuthenticated: false,\n  isLoading: false,\n  error: null,\n  login: async () => { throw new Error('Login not implemented'); },\n  register: async () => { throw new Error('Register not implemented'); },\n  logout: () => { throw new Error('Logout not implemented'); },\n});\n\n// Provider component\nexport const AuthProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n  const [error, setError] = useState<string | null>(null);\n  const navigate = useNavigate();\n\n  // Check if user is already logged in\n  useEffect(() => {\n    const checkAuthStatus = async () => {\n      try {\n        const token = localStorage.getItem('authToken');\n\n        if (token) {\n          const storedUserData = localStorage.getItem('userData');\n\n          if (storedUserData) {\n            const userData: User = JSON.parse(storedUserData);\n\n            if (userData && userData.id) {\n              setUser(userData);\n            } else {\n              clearAuthData();\n            }\n          } else {\n            clearAuthData();\n          }\n        }\n      } catch (err) {\n        console.error('Auth check failed:', err);\n        clearAuthData();\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    checkAuthStatus();\n  }, []);\n\n  // Helper function to clear authentication data\n  const clearAuthData = () => {\n    localStorage.removeItem('authToken');\n    localStorage.removeItem('userData');\n    setUser(null);\n  };\n\n  const login = useCallback(async (email: string, password: string) => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      // Simulate API delay\n      await new Promise(resolve => setTimeout(resolve, 1000));\n\n      // Simulate successful login\n      const userData: User = {\n        id: '1',\n        username: email.split('@')[0],\n        email\n      };\n\n      // Save auth data to localStorage\n      localStorage.setItem('authToken', 'demo-token');\n      localStorage.setItem('userData', JSON.stringify(userData));\n\n      setUser(userData);\n      navigate('/');\n    } catch (err: unknown) {\n      const errorMessage = err instanceof Error ? err.message : 'Login failed';\n      setError(errorMessage);\n      throw err;\n    } finally {\n      setIsLoading(false);\n    }\n  }, [navigate]);\n\n  const register = useCallback(async (username: string, email: string, password: string) => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      // Simulate API delay\n      await new Promise(resolve => setTimeout(resolve, 1000));\n\n      // Simulate successful registration\n      const userData: User = {\n        id: '1',\n        username,\n        email\n      };\n\n      // Save auth data to localStorage\n      localStorage.setItem('authToken', 'demo-token');\n      localStorage.setItem('userData', JSON.stringify(userData));\n\n      setUser(userData);\n      navigate('/');\n    } catch (err: unknown) {\n      const errorMessage = err instanceof Error ? err.message : 'Registration failed';\n      setError(errorMessage);\n      throw err;\n    } finally {\n      setIsLoading(false);\n    }\n  }, [navigate]);\n\n  const logout = useCallback(() => {\n    // Remove auth data from localStorage\n    clearAuthData();\n\n    // Redirect to login page\n    navigate('/login');\n  }, [navigate]);\n\n  const value = {\n    user,\n    isAuthenticated: !!user,\n    isLoading,\n    error,\n    login,\n    register,\n    logout\n  };\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n};\n\n// Custom hook to use the auth context\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n\n  return context;\n};\n\nexport default useAuth;\n"],"mappings":";;;AAAA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,WAAW,EAAEC,aAAa,EAAEC,UAAU,QAAQ,OAAO;AACnF,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAkB/C;AACA,MAAMC,WAAW,gBAAGL,aAAa,CAAkB;EACjDM,IAAI,EAAE,IAAI;EACVC,eAAe,EAAE,KAAK;EACtBC,SAAS,EAAE,KAAK;EAChBC,KAAK,EAAE,IAAI;EACXC,KAAK,EAAE,MAAAA,CAAA,KAAY;IAAE,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;EAAE,CAAC;EAChEC,QAAQ,EAAE,MAAAA,CAAA,KAAY;IAAE,MAAM,IAAID,KAAK,CAAC,0BAA0B,CAAC;EAAE,CAAC;EACtEE,MAAM,EAAEA,CAAA,KAAM;IAAE,MAAM,IAAIF,KAAK,CAAC,wBAAwB,CAAC;EAAE;AAC7D,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMG,YAAqD,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACrF,MAAM,CAACV,IAAI,EAAEW,OAAO,CAAC,GAAGpB,QAAQ,CAAc,IAAI,CAAC;EACnD,MAAM,CAACW,SAAS,EAAEU,YAAY,CAAC,GAAGrB,QAAQ,CAAU,IAAI,CAAC;EACzD,MAAM,CAACY,KAAK,EAAEU,QAAQ,CAAC,GAAGtB,QAAQ,CAAgB,IAAI,CAAC;EACvD,MAAMuB,QAAQ,GAAGlB,WAAW,CAAC,CAAC;;EAE9B;EACAJ,SAAS,CAAC,MAAM;IACd,MAAMuB,eAAe,GAAG,MAAAA,CAAA,KAAY;MAClC,IAAI;QACF,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;QAE/C,IAAIF,KAAK,EAAE;UACT,MAAMG,cAAc,GAAGF,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;UAEvD,IAAIC,cAAc,EAAE;YAClB,MAAMC,QAAc,GAAGC,IAAI,CAACC,KAAK,CAACH,cAAc,CAAC;YAEjD,IAAIC,QAAQ,IAAIA,QAAQ,CAACG,EAAE,EAAE;cAC3BZ,OAAO,CAACS,QAAQ,CAAC;YACnB,CAAC,MAAM;cACLI,aAAa,CAAC,CAAC;YACjB;UACF,CAAC,MAAM;YACLA,aAAa,CAAC,CAAC;UACjB;QACF;MACF,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZC,OAAO,CAACvB,KAAK,CAAC,oBAAoB,EAAEsB,GAAG,CAAC;QACxCD,aAAa,CAAC,CAAC;MACjB,CAAC,SAAS;QACRZ,YAAY,CAAC,KAAK,CAAC;MACrB;IACF,CAAC;IAEDG,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMS,aAAa,GAAGA,CAAA,KAAM;IAC1BP,YAAY,CAACU,UAAU,CAAC,WAAW,CAAC;IACpCV,YAAY,CAACU,UAAU,CAAC,UAAU,CAAC;IACnChB,OAAO,CAAC,IAAI,CAAC;EACf,CAAC;EAED,MAAMP,KAAK,GAAGX,WAAW,CAAC,OAAOmC,KAAa,EAAEC,QAAgB,KAAK;IACnEjB,YAAY,CAAC,IAAI,CAAC;IAClBC,QAAQ,CAAC,IAAI,CAAC;IAEd,IAAI;MACF;MACA,MAAM,IAAIiB,OAAO,CAACC,OAAO,IAAIC,UAAU,CAACD,OAAO,EAAE,IAAI,CAAC,CAAC;;MAEvD;MACA,MAAMX,QAAc,GAAG;QACrBG,EAAE,EAAE,GAAG;QACPU,QAAQ,EAAEL,KAAK,CAACM,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QAC7BN;MACF,CAAC;;MAED;MACAX,YAAY,CAACkB,OAAO,CAAC,WAAW,EAAE,YAAY,CAAC;MAC/ClB,YAAY,CAACkB,OAAO,CAAC,UAAU,EAAEd,IAAI,CAACe,SAAS,CAAChB,QAAQ,CAAC,CAAC;MAE1DT,OAAO,CAACS,QAAQ,CAAC;MACjBN,QAAQ,CAAC,GAAG,CAAC;IACf,CAAC,CAAC,OAAOW,GAAY,EAAE;MACrB,MAAMY,YAAY,GAAGZ,GAAG,YAAYpB,KAAK,GAAGoB,GAAG,CAACa,OAAO,GAAG,cAAc;MACxEzB,QAAQ,CAACwB,YAAY,CAAC;MACtB,MAAMZ,GAAG;IACX,CAAC,SAAS;MACRb,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC,EAAE,CAACE,QAAQ,CAAC,CAAC;EAEd,MAAMR,QAAQ,GAAGb,WAAW,CAAC,OAAOwC,QAAgB,EAAEL,KAAa,EAAEC,QAAgB,KAAK;IACxFjB,YAAY,CAAC,IAAI,CAAC;IAClBC,QAAQ,CAAC,IAAI,CAAC;IAEd,IAAI;MACF;MACA,MAAM,IAAIiB,OAAO,CAACC,OAAO,IAAIC,UAAU,CAACD,OAAO,EAAE,IAAI,CAAC,CAAC;;MAEvD;MACA,MAAMX,QAAc,GAAG;QACrBG,EAAE,EAAE,GAAG;QACPU,QAAQ;QACRL;MACF,CAAC;;MAED;MACAX,YAAY,CAACkB,OAAO,CAAC,WAAW,EAAE,YAAY,CAAC;MAC/ClB,YAAY,CAACkB,OAAO,CAAC,UAAU,EAAEd,IAAI,CAACe,SAAS,CAAChB,QAAQ,CAAC,CAAC;MAE1DT,OAAO,CAACS,QAAQ,CAAC;MACjBN,QAAQ,CAAC,GAAG,CAAC;IACf,CAAC,CAAC,OAAOW,GAAY,EAAE;MACrB,MAAMY,YAAY,GAAGZ,GAAG,YAAYpB,KAAK,GAAGoB,GAAG,CAACa,OAAO,GAAG,qBAAqB;MAC/EzB,QAAQ,CAACwB,YAAY,CAAC;MACtB,MAAMZ,GAAG;IACX,CAAC,SAAS;MACRb,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC,EAAE,CAACE,QAAQ,CAAC,CAAC;EAEd,MAAMP,MAAM,GAAGd,WAAW,CAAC,MAAM;IAC/B;IACA+B,aAAa,CAAC,CAAC;;IAEf;IACAV,QAAQ,CAAC,QAAQ,CAAC;EACpB,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC;EAEd,MAAMyB,KAAK,GAAG;IACZvC,IAAI;IACJC,eAAe,EAAE,CAAC,CAACD,IAAI;IACvBE,SAAS;IACTC,KAAK;IACLC,KAAK;IACLE,QAAQ;IACRC;EACF,CAAC;EAED,oBAAOT,OAAA,CAACC,WAAW,CAACyC,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAA9B,QAAA,EAAEA;EAAQ;IAAAgC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAuB,CAAC;AAC9E,CAAC;;AAED;AAAAlC,EAAA,CA9HaF,YAAqD;EAAA,QAI/CZ,WAAW;AAAA;AAAAiD,EAAA,GAJjBrC,YAAqD;AA+HlE,OAAO,MAAMsC,OAAO,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC3B,MAAMC,OAAO,GAAGrD,UAAU,CAACI,WAAW,CAAC;EAEvC,IAAI,CAACiD,OAAO,EAAE;IACZ,MAAM,IAAI3C,KAAK,CAAC,6CAA6C,CAAC;EAChE;EAEA,OAAO2C,OAAO;AAChB,CAAC;AAACD,GAAA,CARWD,OAAO;AAUpB,eAAeA,OAAO;AAAC,IAAAD,EAAA;AAAAI,YAAA,CAAAJ,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}